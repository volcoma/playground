language: cpp

env:
  global:
   - MAKEFLAGS="-j 2"
   
addons:
  apt:
    packages:
      - cmake
      - ninja
      - openssl
  homebrew:
    packages:
      - cmake
      - ninja
      - openssl   
  chocolatey:
    packages:
      - cmake
      - ninja
      - openssl.light    
    


before_script:
- mkdir build && cd build
- cmake ..

script:
- cmake --build . --target all

matrix:
  include:

    # 1/ Linux Clang Builds
    - os: linux
      addons: &clang38
        apt:
          sources:
            - llvm-toolchain-trusty-3.8
            - ubuntu-toolchain-r-test
          packages: 
            - libstdc++-5-dev
            - clang-3.8
      env: 
        - MATRIX_EVAL="CC=clang-3.8 && CXX=clang++-3.8
 
 
    - os: linux
      addons: &clang39
        apt:
          sources:
            - llvm-toolchain-trusty-3.9
            - ubuntu-toolchain-r-test
          packages: 
            - libstdc++-6-dev
            - clang-3.9
      env: 
        - MATRIX_EVAL="CC=clang-3.9 && CXX=clang++-3.9
 
 
    - os: linux
      addons: &clang40
        apt:
          sources:
            - llvm-toolchain-trusty-4.0
            - ubuntu-toolchain-r-test
          packages: 
            - libstdc++-6-dev
            - clang-4.0
      env: 
        - MATRIX_EVAL="CC=clang-4.0 && CXX=clang++-4.0
 
    
    - os: linux
      addons: &clang50
        apt:
          sources:
            - llvm-toolchain-trusty-5.0
            - ubuntu-toolchain-r-test
          packages: 
            - libstdc++-7-dev
            - clang-5.0
      env: 
        - MATRIX_EVAL="CC=clang-5.0 && CXX=clang++-5.0
 
    # 2/ Linux GCC Builds
    - os: linux
      addons: &gcc5
        apt:
          apt:
          sources: 
            - ubuntu-toolchain-r-test
          packages: 
            - g++-5
      env:
        - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5
 
 
    - os: linux
      addons: &gcc6
        apt:
          apt:
          sources: 
            - ubuntu-toolchain-r-test
          packages: 
            - g++-6
      env:
        - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6
 
        
    - os: linux
      addons: &gcc7
        apt:
          sources: 
            - ubuntu-toolchain-r-test
          packages: 
            - g++-7
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7
        
 
    - name: "macOS Xcode 10 gcc-5"
      os: osx
      osx_image: xcode10
      addons: &gcc5
        homebrew:
          packages:
            - gcc-5
      env:
        - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5      
 
    - name: "macOS Xcode 10 gcc-5"
      os: osx
      osx_image: xcode10
      addons: &gcc6
        homebrew:
          packages:
            - gcc-6
      env:
        - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6

    - os: osx
      osx_image: xcode10
      addons: &gcc7
        homebrew:
          packages:
            - gcc-7
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7 
        
    - name: "macOS Xcode 10"
      os: osx
      osx_image: xcode10

   #- name: "macOS Xcode 10 Static"
   #  os: osx
   #  osx_image: xcode10
   #  env:
   #   - CMAKE_FLAGS="-DBUILD_SHARED_LIBS=FALSE"

    - name: "iOS Xcode 10"
      os: osx
      osx_image: xcode10
      env:
       - CMAKE_FLAGS="-GXcode -DCMAKE_TOOLCHAIN_FILE=../cmake/toolchains/iOS.toolchain.cmake -DIOS_PLATFORM=SIMULATOR"
    
    - name: "Visual studio 15 2017"
      os: windows
    
    #- name: "Visual studio 15 2017 Static"
    #  os: windows
    #  env:
    #    - CMAKE_FLAGS="-DBUILD_SHARED_LIBS=FALSE"

before_install:
  - eval "${MATRIX_EVAL}"
    
notifications:
  email: false
