language: cpp


before_install:
  - eval "${MATRIX_EVAL}"
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      sudo apt-get install cmake
      sudo apt-get install ninja
      
      
      sudo apt-get install openssl
    elif [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then
      brew install cmake
      brew install ninja
      
      brew install openssl@1.1
      export OPENSSL_ROOT_DIR="/usr/local/opt/openssl@1.1"
      echo "$OPENSSL_ROOT_DIR"
    elif [[ "${TRAVIS_OS_NAME}" == "windows" ]]; then
      choco install cmake
      choco install ninja
      
      choco install openssl.light
      export OPENSSL_ROOT_DIR="C:\Program Files\OpenSSL\"
      echo "$OPENSSL_ROOT_DIR"
    fi

before_script:
- mkdir build && cd build
- cmake -G "Ninja" ..

script:
- cmake --build . --target all


matrix:
  include:
 
###################################################### 
#OSX GCC
###################################################### 
    - os: osx
      osx_image: xcode10
      addons: &gcc5
        homebrew:
          packages:
            - gcc5
      env:
        - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"
 
    - os: osx
      osx_image: xcode10
      addons: &gcc6
        homebrew:
          packages:
            - gcc6
      env:
        - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"

    - os: osx
      osx_image: xcode10
      addons: &gcc-latest
        homebrew:
          packages:
            - gcc
      env:
        - MATRIX_EVAL="CC=gcc && CXX=g++"
###################################################### 
#OSX Clang
###################################################### 
    - os: osx
      osx_image: xcode10
      compiler: clang
      env:
        - CMAKE_FLAGS="-GXcode -DCMAKE_TOOLCHAIN_FILE=../cmake/toolchains/iOS.toolchain.cmake -DIOS_PLATFORM=SIMULATOR"

###################################################### 
#Windows MSVC
######################################################         
    - name: "Visual studio 15 2017"
      os: windows

###################################################### 
#Windows MinGW
######################################################       
    - name: "MinGW"
      os: windows
      compiler: gcc

###################################################### 
#Linux Clang
###################################################### 
    - os: linux
      addons: &clang38
        apt:
          sources:
            - llvm-toolchain-trusty-3.8
            - ubuntu-toolchain-r-test
          packages:
            - libstdc++-5-dev
            - clang-3.8
      env: 
        - MATRIX_EVAL="CC=clang-3.8 && CXX=clang++-3.8"
 
 
    - os: linux
      addons: &clang39
        apt:
          sources:
            - llvm-toolchain-trusty-3.9
            - ubuntu-toolchain-r-test
          packages:
            - libstdc++-6-dev
            - clang-3.9
      env: 
        - MATRIX_EVAL="CC=clang-3.9 && CXX=clang++-3.9"
 
 
    - os: linux
      addons: &clang40
        apt:
          sources:
            - llvm-toolchain-trusty-4.0
            - ubuntu-toolchain-r-test
          packages: 
            - libstdc++-6-dev
            - clang-4.0
      env: 
        - MATRIX_EVAL="CC=clang-4.0 && CXX=clang++-4.0"
 
    
    - os: linux
      addons: &clang50
        apt:
          sources:
            - llvm-toolchain-trusty-5.0
            - ubuntu-toolchain-r-test
          packages: 
            - libstdc++-7-dev
            - clang-5.0
      env: 
        - MATRIX_EVAL="CC=clang-5.0 && CXX=clang++-5.0"
        
###################################################### 
#Linux GCC
###################################################### 

    - os: linux
      addons: &gcc5
        apt:
          apt:
          sources: 
            - ubuntu-toolchain-r-test
          packages: 
            - g++-5
      env:
        - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"
 
 
    - os: linux
      addons: &gcc6
        apt:
          apt:
          sources: 
            - ubuntu-toolchain-r-test
          packages: 
            - g++-6
      env:
        - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"
 
        
    - os: linux
      addons: &gcc7
        apt:
          sources: 
            - ubuntu-toolchain-r-test
          packages: 
            - g++-7
      env:
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
###################################################### 

  
notifications:
  email: false
